@using CarCatalog.Core.ViewModels.Car;
@model CarViewModel




<h2 style="color: white">@ViewData["Title"]</h2>

<div class="align-content-center">

    <div class="row col-md-4 offset-4">
        <form method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label asp-for="CarBrand"></label>
                <input asp-for="CarBrand" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="CarModel"></label>
                <input asp-for="CarModel" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Year"></label>
                <input asp-for="Year" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="HorsePower"></label>
                <input asp-for="HorsePower" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="FuelType"></label>
                <input asp-for="FuelType" class="form-control" />
            </div>
            <div class="form-group">
                <label for="TransmisionType">Transmission</label>
                <select id="TransmisionType" class="form-control" name="TransmisionId">
                    <option selected disabled>Select a Transmission</option>
                    @foreach (var transmision in (IEnumerable<CarViewModel>)ViewData["transmisions"])
                    {
                        <option value="@transmision.TransmisionId">@transmision.TransmisionType</option>
                    }
                </select>
                <span asp-validation-for="TransmisionId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Gears">Gears</label>
                <select id="Gears" class="form-control" name="GearId" disabled>
                    <option selected disabled>Select a Transmission first</option>
                </select>
                <span asp-validation-for="GearId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="BodyType">BodyType</label>
                <select id="BodyType" class="form-control" name="BodyTypeId">
                    <option selected disabled>Select a BodyType</option>
                    @foreach (var bodyType in (IEnumerable<CarViewModel>)ViewData["bodyTypes"])
                    {
                        <option value="@bodyType.BodyTypeId">@bodyType.BodyTypeName</option>
                    }
                </select>
                <span asp-validation-for="BodyTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Doors">Doors</label>
                <select id="Doors" class="form-control" name="DoorId" disabled>
                    <option selected disabled>Select a BodyType first</option>
                </select>
                <span asp-validation-for="DoorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GalleryFiles">Choose image</label>
                <input asp-for="GalleryFiles" class="form-control" />
                <span asp-validation-for="GalleryFiles" class="text-danger"></span>
            </div>
            @foreach (var item in Model.Gallery)
            {
                <img width="400px" src="@item.URL" alt="@item.Name">
                <a asp-action="DeleteImage" asp-controller="Image" asp-route-id="@item.ImageId" asp-route-carId="@item.CarId" class="btn btn-danger">Delete</a>
            }
            <div class="d-flex justify-content-center mt-3">
                <button class="btn btn-primary font-weight-bold">Edit</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('#TransmisionType').change(function () {
                var selectedTransmisionId = $(this).val();
                if (selectedTransmisionId) {
                    updateGearsOptions(selectedTransmisionId);
                } else {
                    $('#Gears').empty().prop('disabled', true);
                }
            });

            $('#Gears').change(function () {
                var selectedGearValue = $(this).val();
                if (selectedGearValue) {
                    var selectedGearId = findGearIdByValue(selectedGearValue);
                    $('#GearId').val(selectedGearId); // Update the hidden input field
                }
            });

            $('#BodyType').change(function () {
                var selectedBodyTypeId = $(this).val();
                if (selectedBodyTypeId) {
                    updateDoorsOptions(selectedBodyTypeId);
                } else {
                    $('#Doors').empty().prop('disabled', true);
                }
            });

            $('#Doors').change(function () {
                var selectedDoorCount = $(this).val();
                if (selectedDoorCount) {
                    var selectedDoorId = findDoorIdByCount(selectedDoorCount);
                    $('#DoorId').val(selectedDoorId); // Update the hidden input field
                }
            });
        });

        function updateGearsOptions(selectedTransmisionId) {
            $.ajax({
                url: '/Gear/GetGearsForTransmissionId',
                type: 'GET',
                data: { transmisionId: selectedTransmisionId },
                success: function (gears) {
                    var gearsDropdown = $('#Gears');
                    console.log(gears);
                    gearsDropdown.empty();
                    gearsDropdown.append('<option selected disabled>Select a Gear</option>');
                    $.each(gears, function (index, gear) {
                        gearsDropdown.append($('<option></option>').val(gear.gearId).text(gear.value));
                    });
                    gearsDropdown.prop('disabled', false);
                }
            });
        }


        function updateDoorsOptions(selectedBodyTypeId) {
            $.ajax({
                url: '/Door/GetDoorsByBodyTypeId',
                type: 'GET',
                data: { bodyTypeId: selectedBodyTypeId },
                success: function (doors) {
                    var doorsDropdown = $('#Doors');
                    console.log(doors);
                    doorsDropdown.empty();
                    doorsDropdown.append('<option selected disabled>Select a Door</option>');
                    $.each(doors, function (index, door) {
                        doorsDropdown.append($('<option></option>').val(door.doorId).text(door.doorsCount));
                    });
                    doorsDropdown.prop('disabled', false);
                }
            });
        }

        function findGearIdByValue(gearValue) {
            var gears = @Html.Raw(Json.Serialize(ViewData["transmisions"]));
            for (var i = 0; i < gears.length; i++) {
                if (gears[i].GearValue === gearValue) {
                    return gears[i].GearId;
                }
            }
            return null;
        }

        function findDoorIdByCount(doorCount) {
            var bodyTypes = @Html.Raw(Json.Serialize(ViewData["bodyTypes"]));
            for (var i = 0; i < bodyTypes.length; i++) {
                var doors = bodyTypes[i].Doors;
                for (var j = 0; j < doors.length; j++) {
                    if (doors[j].DoorCount === doorCount) {
                        return doors[j].DoorId;
                    }
                }
            }
            return null;
        }


    </script>
}
